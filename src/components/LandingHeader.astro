---
import GlobeIcon from "./GlobeIcon.astro";
import HelpIcon from "./HelpIcon.astro";
import Logo from "./Logo.astro";
import PersonIcon from "./PersonIcon.astro";
---

<header
  id="landing-header"
  class="isolate py-3 px-10 flex items-center fixed top-0 w-full justify-between z-40 text-white [& svg]:transition-colors"
>
  <div class="flex flex-grow basis-0">
    <Logo />
  </div>

  <nav>
    <ul
      class="flex text-sm [&>li>a]:transition-colors [&>li>a]:duration-500 [&>li>a]:text-current [&>li>a]:font-medium [&>li>a]:inline-block [&>li>a]:px-4 [&>li>a]:py-2"
    >
      <li><a href="#">Vehicles</a></li>
      <li><a href="#">Energy</a></li>
      <li><a href="#">Charging</a></li>
      <li><a href="#">Discover</a></li>
      <li><a href="#">Shop</a></li>
    </ul>
    <div
      id="menu-backdrop"
      class={`
      absolute bg-black/5 backdrop-blur-lg rounded
      translate-x-[var(--left)] translate-y-[var(--top)]
      left-0 top-0
      w-[var(--width)] h-[var(--height)]
      transition-all duration-500
      ease-in-out opacity-0 -z-10
    `}
    >
    </div>
  </nav>

  <nav class="flex gap-1 flex-grow basis-0 justify-end">
    <a
      class="text-current size-8 rounded p-1 hover:bg-white/5 hover:backdrop-blur-sm transition"
      href="#"
    >
      <HelpIcon />
    </a>

    <a
      class="text-current size-8 rounded p-1 hover:bg-white/5 hover:backdrop-blur-sm transition"
      href="#"
    >
      <GlobeIcon />
    </a>

    <a
      class="text-current size-8 rounded p-1 hover:bg-white/5 hover:backdrop-blur-sm transition"
      href="#"
    >
      <PersonIcon />
    </a>
  </nav>

  <section class="absolute left-0 -z-10 marker:top-0 w-full bg-blue-500 h-full">
  </section>
</header>

<script>
  const listItems = document.querySelectorAll("#landing-header li");
  const menuBackdrop = document.querySelector("#menu-backdrop") as HTMLElement;
  menuBackdrop.style.setProperty("--left", `${window.innerWidth / 2}px`);

  listItems.forEach((item) => {
    item.addEventListener("mouseenter", () => {
      const { left, top, width, height } = item.getBoundingClientRect();

      menuBackdrop.style.setProperty("--left", `${left}px`);
      menuBackdrop.style.setProperty("--top", `${top}px`);
      menuBackdrop.style.setProperty("--width", `${width}px`);
      menuBackdrop.style.setProperty("--height", `${height}px`);

      menuBackdrop.style.opacity = "1";
      menuBackdrop.style.visibility = "visible";
    });

    item.addEventListener("mouseleave", () => {
      menuBackdrop.style.opacity = "0";
      menuBackdrop.style.visibility = "hidden";
    });
  });
</script>

<script>
  const headerElement = document.querySelector(
    "#landing-header"
  ) as HTMLElement;

  const observerOptions = {
    root: null,
    rootMargin: "0px",
    threshold: 0.9,
  };

  const observer = new IntersectionObserver((entries) => {
    entries.forEach((entry) => {
      const { isIntersecting } = entry;

      if (isIntersecting) {
        const color = entry.target.getAttribute("data-header-color");
        headerElement.style.color = color;
      }
    });
  }, observerOptions);

  const sectionElements = document.querySelectorAll(".landing-section");
  sectionElements.forEach((section) => observer.observe(section));
</script>
